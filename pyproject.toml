[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.poetry]
authors = ["Martin Hjelmare <marhje52@gmail.com>"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries",
]
description = "An asyncio client for the Home Connect API."
documentation = "https://aiohomeconnect.readthedocs.io"
license = "Apache Software License 2.0"
name = "aiohomeconnect"
packages = [
  {include = "aiohomeconnect", from = "src"},
]
readme = "README.md"
repository = "https://github.com/MartinHjelmare/aiohomeconnect"
version = "0.0.0"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MartinHjelmare/aiohomeconnect/issues"
"Changelog" = "https://github.com/MartinHjelmare/aiohomeconnect/blob/main/CHANGELOG.md"

[tool.poetry.dependencies]
httpx = "^0.26.0"
python = "^3.11"

[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
codespell = "^2.2.6"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
pytest = "^7.0"
pytest-cov = "^4.0"
ruff = "^0.1.9"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
furo = ">=2023.5.20"
myst-parser = ">=0.16"
sphinx = ">=4.0"
sphinx-autobuild = ">=2021.3.14"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "if TYPE_CHECKING",
  "raise NotImplementedError",
  'if __name__ == "__main__":',
]

[tool.coverage.run]
branch = true

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
exclude = [
  'docs/.*',
  'setup.py',
]
mypy_path = "src/"
no_implicit_optional = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
allow_untyped_defs = true
module = "tests.*"

[[tool.mypy.overrides]]
ignore_errors = true
module = "docs.*"

[tool.pytest.ini_options]
addopts = "-v -Wdefault --cov=aiohomeconnect --cov-report=term-missing:skip-covered"
pythonpath = ["src"]

[tool.ruff]
ignore = [
  "ANN101", # missing-type-self
  "ANN401", # any-type
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
  "D417", # False positives in some occasions
  "PLR2004", # magic-value-comparison
]
line-length = 88
select = [
  "ALL", # all rules
]
target-version = "py311"

[tool.ruff.per-file-ignores]
"conftest.py" = ["D100"]
"docs/conf.py" = ["D100"]
"setup.py" = ["D100"]
"tests/**/*" = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "S101",
]

[tool.ruff.isort]
known-first-party = ["aiohomeconnect", "tests"]

[tool.semantic_release]
build_command = "pip install poetry && poetry build"
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = [
  "src/aiohomeconnect/__init__.py:__version__",
  "docs/conf.py:release",
]

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.noop]
match = "(?!main$)"
prerelease = true

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  "chore*",
  "ci*",
]

[tool.semantic_release.changelog.environment]
keep_trailing_newline = true
